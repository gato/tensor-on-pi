apiVersion: v1
kind: PersistentVolume
metadata:
  name: jupyter-books
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-books
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter
  template:
    metadata:
      labels:
        app: jupyter
    spec:
      containers:
        - name: jupyter
          image: marceloglezer/jupyter:latest
          resources:
            requests:
              memory: "2Gi"
            limits:
              memory: "2Gi"
              #cpu: "4"
          ports:
          - containerPort: 8888
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: "/books"
            name: j-books
      volumes:
      - name: j-books
        persistentVolumeClaim:
          claimName: jupyter-books
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
spec:
  ports:
  - port: 8888
    targetPort: 8888
    name: tcp
  selector:
    app: jupyter
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jupyter
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: jupyter
          servicePort: 8888